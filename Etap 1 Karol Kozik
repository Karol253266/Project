#include <iostream>
#include <string>
#include <fstream>
#include <stdio.h>
#include <vector>
using namespace std;
class pojazd
{
public:
	string marka;
	string model;
	int rocznik;
	int pojemnosc;
	int przebieg;
	bool automat;
	pojazd() {};
	void wypisz()
	{
		cout << marka << " " << model << " - " << rocznik << " - " << pojemnosc << "cm^3 - " << przebieg << "Km - " << (automat ? "automat" : "manual") << endl;;
	}
};
int main()
{
	int wybor1; string wybor2; int wybor3;
	vector<pojazd> Katalog;
	while (1)
	{
		cout << "Gdzie chcialbys przejsc?" << endl;
		cout << "1. Wyswietlenie listy samochodow" << endl;
		cout << "2. Wyswietlenie danych pojedynczego samochodu" << endl;
		cout << "3. Wprowadzenie danych nowego samochodu" << endl;
		cout << "4. Wyswietlenie warunkowe listy samochodow " << endl;
		cout << "5. Wczytanie katalogu z pliku" << endl;
		cout << "6. Zapis katalogu w pliku" << endl;
		cout << "7. Usuniecie samochodu z katalogu" << endl;
		cout << "8.Wyszukiwanie auta po parametrze" << endl;
		cout << "0. Zakoncz program" << endl;
		cout << "Podaj numer" << endl;
		cin >> wybor1;
		switch (wybor1)
		{
		case 1:
		{
			int i = 1;


			for (pojazd element : Katalog)
			{
				cout << i++ << ". ";
				element.wypisz();

			}
			break;
		}
		case 2:
		{
			cout << "Prowadz indeks pojazdu ktory chcesz usunac" << endl;
			int indeks;
			cin >> indeks;
			if (indeks > 0 && indeks <= Katalog.size())
			{
				Katalog[indeks - 1].wypisz();
		    }
			else
			{
				cout << "Nie mozna wypisac pojazdu z katalogu, gdyz nie istnieje" << endl;

			}
			
			break;
		}
		case 3:
		{
			cout << "Wprowadzasz " << Katalog.size() + 1 << " Pojazd do katalogu " << endl;
			pojazd Volkswagen = pojazd();
			cout << "Podaj marke" << endl;
			cin >> Volkswagen.marka;
			cout << "Podaj model" << endl;
			cin >> Volkswagen.model;
			cout << "Podaj rocznik" << endl;
			cin >> Volkswagen.rocznik;
			cout << "Podaj pojemnosc" << endl;
			cin >> Volkswagen.pojemnosc;
			cout << "Podaj przebieg" << endl;
			cin >> Volkswagen.przebieg;
			cout << "Czy posiada typ skrzyni automatycznej ?" << endl;
			cout << "Wprowadz 1 - jesli tak " << endl;
			cin >> wybor3;
			bool automat;
			Volkswagen.automat = ((wybor3 == 1) ? true : false);
			Katalog.push_back(Volkswagen);

			break;
		}
		case 4:
		{
			int i = 1;


			for (pojazd element : Katalog)
			{
				if (element.przebieg < 100000)
				{
					element.wypisz();
				}
				else if (element.pojemnosc < 100)
				{
					element.wypisz();
				}

			}
			break;

		}
		case 5:
		{
			
			{
				Katalog = {};
				ifstream plik;
				plik.open("Katalog.txt");
				if (plik.good() == true)
				{
					while (!plik.eof()) {
						 pojazd pojazd;
						plik >> pojazd.marka;
						plik >> pojazd.model;
						plik >> pojazd.rocznik;
						plik >> pojazd.pojemnosc;
						plik >> pojazd.przebieg;
						plik >> pojazd.automat;
						Katalog.push_back(pojazd);
					}
					plik.close();
				}
				
			}
			break;
		}
		case 6:
		{
			ofstream plik;
			plik.open("Katalog.txt");
			if (plik.good() == true)
			{
				int rozmiar = Katalog.size();
				for (auto pojazd : Katalog) {
					plik << pojazd.marka << " ";
					plik << pojazd.model << " ";
					plik << pojazd.rocznik << " ";
					plik << pojazd.pojemnosc << " ";
					plik << pojazd.przebieg << " ";
					plik << pojazd.automat << ( --rozmiar? "\n" : "");
				}
				plik.close();
			}
			break;
		}
		case 7:
		{
			cout << "Prowadz indeks pojazdu ktory chcesz usunac" << endl;
			int indeks;
			cin >> indeks;
			if (indeks > 0 && indeks<=Katalog.size())
			{
				Katalog.erase(Katalog.begin() + (indeks - 1));
			}
			else
			{
				cout << "Nie mozna usunac pojazdu z katalogu, gdyz nie istnieje" << endl;

			}
			break;
		}
		case 8:
		{
			char m,l;
			int y, min, max;
			cout << "Jakiej marki auta szukasz ? " << endl;
			cin >> m;
			cout << "Jaki model?" << endl;
			cin >> l;
			cout << "Jaki rocznik?" << endl;
			cin >> y;
			cout << "W jaki przedziale ma byÄ‡ przebieg ?" << endl;
			cout << "Przebieg minimalny "; cin >> min;
			cout << "Przebieg maksymalny "; cin >> max;
			for (pojazd element : Katalog) {
				
				
					
				if ((element.marka).find(m)!=string::npos && element.model.find(l) != string::npos && element.rocznik == y && element.przebieg > min && element.przebieg < max)
					element.wypisz();
							
					

				
				
			}
			break;
		}
		case 0:
			return 0;
		}
	}
}
